{"ast":null,"code":"var _jsxFileName = \"/home/akshay/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Titles from './components/titles';\nimport Form from './components/form';\nimport Weather from './components/weather';\nconst API_KEY = \"b5dfbfbc65e5385ff7ff30fd1c217740\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.city.value;\n      const country = e.target.country.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (city && country) {\n        console.log(data);\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter city and country.\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/akshay/weather-app/src/App.js"],"names":["React","Component","Titles","Form","Weather","API_KEY","App","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","value","api_call","fetch","data","json","console","log","setState","main","temp","name","sys","weather","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Titles from './components/titles';\nimport Form from './components/form';\nimport Weather from './components/weather';\n\nconst API_KEY = \"b5dfbfbc65e5385ff7ff30fd1c217740\";\n\nclass App extends Component {\n\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n\n    error: undefined\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.city.value;\n    const country = e.target.country.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    if (city && country) {\n      console.log(data);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n    });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter city and country.\"\n    });\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"\">\n          <div className=\"row\">\n            <div className=\"col-sm-5\">\n              <div className=\"title-container\">\n                <Titles />\n              </div>\n            </div>\n            <div className=\"col-sm-7\">\n              <div className=\"form-container\">\n              <Form getWeather={this.getWeather} />\n              <Weather \n                temperature={this.state.temperature}\n                city={this.state.city}\n                country={this.state.country}\n                humidity={this.state.humidity}\n                description={this.state.description}\n                error={this.state.error}\n              />\n              </div>\n            </div>\n          </div>\n        </div>\n\n      );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}